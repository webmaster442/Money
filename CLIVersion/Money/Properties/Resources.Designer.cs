//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Money.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Money.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Bach input mode for categories.
        ///# Enter every category that you wish to add in a new line.
        ///# When you are finished. Save the file and close the edior
        ///# Note: blank lines and lines starting with # are ignored
        ///.
        /// </summary>
        internal static string BachCategoryText {
            get {
                return ResourceManager.GetString("BachCategoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Bach input mode for Spendings.
        ///# Enter every spending that you wish to add in a new line in the following format
        ///#
        ///# Date;Ammount;Description;Category
        ///#
        ///# When you are finished. Save the file and close the edior
        ///# Note: blank lines and lines starting with # are ignored
        ///.
        /// </summary>
        internal static string BachSpendingsText {
            get {
                return ResourceManager.GetString("BachSpendingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a spending to the database.
        /// </summary>
        internal static string CmdAddDescription {
            get {
                return ResourceManager.GetString("CmdAddDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a spending category.
        /// </summary>
        internal static string CmdCategoryAddDescription {
            get {
                return ResourceManager.GetString("CmdCategoryAddDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category management commands.
        /// </summary>
        internal static string CmdCategoryDescription {
            get {
                return ResourceManager.GetString("CmdCategoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List all spending categories.
        /// </summary>
        internal static string CmdCategoryListDescription {
            get {
                return ResourceManager.GetString("CmdCategoryListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename a category.
        /// </summary>
        internal static string CmdCategoryRenameDescription {
            get {
                return ResourceManager.GetString("CmdCategoryRenameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export data to backup format.
        /// </summary>
        internal static string CmdExportBackupDescription {
            get {
                return ResourceManager.GetString("CmdExportBackupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export related commands.
        /// </summary>
        internal static string CmdExportDescription {
            get {
                return ResourceManager.GetString("CmdExportDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export data to excel xlsx file.
        /// </summary>
        internal static string CmdExportExcelDescription {
            get {
                return ResourceManager.GetString("CmdExportExcelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export a report to an html file.
        /// </summary>
        internal static string CmdExportReportDescription {
            get {
                return ResourceManager.GetString("CmdExportReportDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search spendings in the database.
        /// </summary>
        internal static string CmdFindDescription {
            get {
                return ResourceManager.GetString("CmdFindDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import data to money backup format.
        /// </summary>
        internal static string CmdImportBackupDescription {
            get {
                return ResourceManager.GetString("CmdImportBackupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import related commands.
        /// </summary>
        internal static string CmdImportDescription {
            get {
                return ResourceManager.GetString("CmdImportDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import data from excel xlsx file.
        /// </summary>
        internal static string CmdImportExcelDescription {
            get {
                return ResourceManager.GetString("CmdImportExcelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create excel template for importing.
        /// </summary>
        internal static string CmdImportTemplateDescription {
            get {
                return ResourceManager.GetString("CmdImportTemplateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open program settings in editor....
        /// </summary>
        internal static string CmdSettingsDescription {
            get {
                return ResourceManager.GetString("CmdSettingsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display statistics about spendings.
        /// </summary>
        internal static string CmdStatDescription {
            get {
                return ResourceManager.GetString("CmdStatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync database with git commands.
        /// </summary>
        internal static string CmdSyncDescription {
            get {
                return ResourceManager.GetString("CmdSyncDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pull syncronized changes from the specified git repository.
        /// </summary>
        internal static string CmdSyncPullDescription {
            get {
                return ResourceManager.GetString("CmdSyncPullDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push unsyncronized changes to the specified git repository.
        /// </summary>
        internal static string CmdSyncPushDescription {
            get {
                return ResourceManager.GetString("CmdSyncPushDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount must be positive and greater than 0.
        /// </summary>
        internal static string ErrorAddNegativeAmmount {
            get {
                return ResourceManager.GetString("ErrorAddNegativeAmmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t convert value to DateOnly..
        /// </summary>
        internal static string ErrorCantConvertDateOnly {
            get {
                return ResourceManager.GetString("ErrorCantConvertDateOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create category {0} It allredy exists.
        /// </summary>
        internal static string ErrorCategoryAllreadyExists {
            get {
                return ResourceManager.GetString("ErrorCategoryAllreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category doesn&apos;t exist: {0}
        ///Create it first with the category add command.
        /// </summary>
        internal static string ErrorCategoryDoesntExist {
            get {
                return ResourceManager.GetString("ErrorCategoryDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category name can&apos;t be null or empty.
        /// </summary>
        internal static string ErrorCategoryNameNull {
            get {
                return ResourceManager.GetString("ErrorCategoryNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to end date must be bigger than start date.
        /// </summary>
        internal static string ErrorDateValidate {
            get {
                return ResourceManager.GetString("ErrorDateValidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file name can&apos;t be empty.
        /// </summary>
        internal static string ErrorEmptyFileName {
            get {
                return ResourceManager.GetString("ErrorEmptyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text can&apos;t be empty.
        /// </summary>
        internal static string ErrorEmptyText {
            get {
                return ResourceManager.GetString("ErrorEmptyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file name can&apos;t be empy and must be an existing file.
        /// </summary>
        internal static string ErrorFileMustExist {
            get {
                return ResourceManager.GetString("ErrorFileMustExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: specified git folder for sync doesn&apos;t exist.  Run the settings subcommand to check settings..
        /// </summary>
        internal static string ErrorFolderDoesntExist {
            get {
                return ResourceManager.GetString("ErrorFolderDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: specified git folder for sync isn&apos;t a git repository.  Run the settings subcommand to check settings..
        /// </summary>
        internal static string ErrorFolderNotGitFolder {
            get {
                return ResourceManager.GetString("ErrorFolderNotGitFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: git folder for sync is not set. Run the settings subcommand to set it..
        /// </summary>
        internal static string ErrorFolderNotSet {
            get {
                return ResourceManager.GetString("ErrorFolderNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid data in json.
        /// </summary>
        internal static string ErrorInvalidJson {
            get {
                return ResourceManager.GetString("ErrorInvalidJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No search term was given.
        /// </summary>
        internal static string ErrorNoSearchTermGiven {
            get {
                return ResourceManager.GetString("ErrorNoSearchTermGiven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is a not valid date..
        /// </summary>
        internal static string ErrorNotValidDate {
            get {
                return ResourceManager.GetString("ErrorNotValidDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully inserted with id:.
        /// </summary>
        internal static string InsertSuccess {
            get {
                return ResourceManager.GetString("InsertSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [7mMoney[0m
        ///
        ///A simple console expense manager software written in C#. It uses EntityFramework to store data and for console output Spectre.Console.
        ///
        ///[4;93mUsage[0m
        ///
        ///The program is a console application and can be operated via commands, like git.
        ///
        ///Selected commands offer Bach mode. In this input mode, the given command will open your text editor where you can specify multiple entries at once for editing.
        ///
        ///[4;94mAdd[0m
        ///
        ///[48;2;155;155;155;38;2;30;30;30mDESCRIPTION:[500@[0m
        ///[48;2;155;155;155;38;2;30;3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ReadmeRender {
            get {
                return ResourceManager.GetString("ReadmeRender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average / count.
        /// </summary>
        internal static string StatAveragePerCount {
            get {
                return ResourceManager.GetString("StatAveragePerCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average / day.
        /// </summary>
        internal static string StatAveragePerDay {
            get {
                return ResourceManager.GetString("StatAveragePerDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category.
        /// </summary>
        internal static string StatCategory {
            get {
                return ResourceManager.GetString("StatCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available categories.
        /// </summary>
        internal static string StatCategoryAvailable {
            get {
                return ResourceManager.GetString("StatCategoryAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date.
        /// </summary>
        internal static string StatDate {
            get {
                return ResourceManager.GetString("StatDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dayly breakdown.
        /// </summary>
        internal static string StatDayly {
            get {
                return ResourceManager.GetString("StatDayly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spendings from {0} to {1}.
        /// </summary>
        internal static string StatFromToHeader {
            get {
                return ResourceManager.GetString("StatFromToHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spending count.
        /// </summary>
        internal static string StatSpendingCount {
            get {
                return ResourceManager.GetString("StatSpendingCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spendings with days.
        /// </summary>
        internal static string StatSpendingWithDays {
            get {
                return ResourceManager.GetString("StatSpendingWithDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spent money.
        /// </summary>
        internal static string StatSpent {
            get {
                return ResourceManager.GetString("StatSpent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sum spending.
        /// </summary>
        internal static string StatSumSpending {
            get {
                return ResourceManager.GetString("StatSumSpending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total spending.
        /// </summary>
        internal static string StatTotalSpending {
            get {
                return ResourceManager.GetString("StatTotalSpending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body {
        ///    font-family: Open Sans, Arial;
        ///    color: #454545;
        ///    font-size: 1em;
        ///    margin: 2em auto;
        ///    max-width: 1024px;
        ///    padding: 1em;
        ///    line-height: 1.4;
        ///    text-align: justify
        ///}
        ///
        ///a {
        ///    color: #07a
        ///}
        ///
        ///a:visited {
        ///    color: #941352
        ///}
        ///
        ///details summary {
        ///    font-size: 1.5em;
        ///    margin-bottom: 10px;
        ///}
        ///
        ///    details summary pre {
        ///        margin-top: 0px;
        ///        margin-bottom: 0px;
        ///        margin-left: 30px;
        ///    }
        ///
        ///    details summary p {
        ///        margin-top: 0px;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string style {
            get {
                return ResourceManager.GetString("style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imported {0} categories and {1} entries.
        /// </summary>
        internal static string SuccesImport {
            get {
                return ResourceManager.GetString("SuccesImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully renamed {0} to {1}.
        /// </summary>
        internal static string SuccessCategoryRename {
            get {
                return ResourceManager.GetString("SuccessCategoryRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created import template {0}.
        /// </summary>
        internal static string SuccessCreatedImportTemplate {
            get {
                return ResourceManager.GetString("SuccessCreatedImportTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully written {0} entries to {1}.
        /// </summary>
        internal static string SuccessExport {
            get {
                return ResourceManager.GetString("SuccessExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report successfully written to {0}.
        /// </summary>
        internal static string SuccessReport {
            get {
                return ResourceManager.GetString("SuccessReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening settings in editor....
        /// </summary>
        internal static string SuccessSettingsOpen {
            get {
                return ResourceManager.GetString("SuccessSettingsOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning. Importing a backup will replace the database contents with the contents in the backup. Do you want to continue?.
        /// </summary>
        internal static string WarnWillReplaceDbContents {
            get {
                return ResourceManager.GetString("WarnWillReplaceDbContents", resourceCulture);
            }
        }
    }
}
